/* automatically generated by rust-bindgen 0.69.1, modified by SF-Zhou */
/* C header file: https://github.com/axboe/liburing/blob/liburing-2.5/src/include/liburing/io_uring.h */
/* bindgen io_uring.h --no-layout-tests --no-prepend-enum-name --translate-enum-integer-types */

use crate::flags::*;

pub const IORING_FILE_INDEX_ALLOC: i32 = -1;
pub const IORING_URING_CMD_FIXED: u32 = 1;
pub const IORING_FSYNC_DATASYNC: u32 = 1;
pub const IORING_TIMEOUT_ABS: u32 = 1;
pub const IORING_TIMEOUT_UPDATE: u32 = 2;
pub const IORING_TIMEOUT_BOOTTIME: u32 = 4;
pub const IORING_TIMEOUT_REALTIME: u32 = 8;
pub const IORING_LINK_TIMEOUT_UPDATE: u32 = 16;
pub const IORING_TIMEOUT_ETIME_SUCCESS: u32 = 32;
pub const IORING_TIMEOUT_MULTISHOT: u32 = 64;
pub const IORING_TIMEOUT_CLOCK_MASK: u32 = 12;
pub const IORING_TIMEOUT_UPDATE_MASK: u32 = 18;
pub const SPLICE_F_FD_IN_FIXED: u32 = 2147483648;
pub const IORING_POLL_ADD_MULTI: u32 = 1;
pub const IORING_POLL_UPDATE_EVENTS: u32 = 2;
pub const IORING_POLL_UPDATE_USER_DATA: u32 = 4;
pub const IORING_POLL_ADD_LEVEL: u32 = 8;
pub const IORING_ASYNC_CANCEL_ALL: u32 = 1;
pub const IORING_ASYNC_CANCEL_FD: u32 = 2;
pub const IORING_ASYNC_CANCEL_ANY: u32 = 4;
pub const IORING_ASYNC_CANCEL_FD_FIXED: u32 = 8;
pub const IORING_RECVSEND_POLL_FIRST: u32 = 1;
pub const IORING_RECV_MULTISHOT: u16 = 2;
pub const IORING_RECVSEND_FIXED_BUF: u32 = 4;
pub const IORING_SEND_ZC_REPORT_USAGE: u32 = 8;
pub const IORING_NOTIF_USAGE_ZC_COPIED: u32 = 2147483648;
pub const IORING_ACCEPT_MULTISHOT: u16 = 1;
pub const IORING_MSG_RING_CQE_SKIP: u32 = 1;
pub const IORING_MSG_RING_FLAGS_PASS: u32 = 2;
pub const IORING_FIXED_FD_NO_CLOEXEC: u32 = 1;
pub const IORING_CQE_F_BUFFER: u32 = 1;
pub const IORING_CQE_F_MORE: u32 = 2;
pub const IORING_CQE_F_SOCK_NONEMPTY: u32 = 4;
pub const IORING_CQE_F_NOTIF: u32 = 8;
pub const IORING_OFF_SQ_RING: i64 = 0;
pub const IORING_OFF_CQ_RING: i64 = 134217728;
pub const IORING_OFF_SQES: i64 = 268435456;
pub const IORING_OFF_PBUF_RING: i64 = 2147483648;
pub const IORING_OFF_PBUF_SHIFT: i64 = 16;
pub const IORING_OFF_MMAP_MASK: i64 = 4160749568;
pub const IORING_RSRC_REGISTER_SPARSE: u32 = 1;
pub const IORING_REGISTER_FILES_SKIP: i32 = -2;
pub const IO_URING_OP_SUPPORTED: u16 = 1;
pub const IOSQE_FIXED_FILE_BIT: u32 = 0;
pub const IOSQE_IO_DRAIN_BIT: u32 = 1;
pub const IOSQE_IO_LINK_BIT: u32 = 2;
pub const IOSQE_IO_HARDLINK_BIT: u32 = 3;
pub const IOSQE_ASYNC_BIT: u32 = 4;
pub const IOSQE_BUFFER_SELECT_BIT: u32 = 5;
pub const IOSQE_CQE_SKIP_SUCCESS_BIT: u32 = 6;
pub const IORING_OP_NOP: u8 = 0;
pub const IORING_OP_READV: u8 = 1;
pub const IORING_OP_WRITEV: u8 = 2;
pub const IORING_OP_FSYNC: u8 = 3;
pub const IORING_OP_READ_FIXED: u8 = 4;
pub const IORING_OP_WRITE_FIXED: u8 = 5;
pub const IORING_OP_POLL_ADD: u8 = 6;
pub const IORING_OP_POLL_REMOVE: u8 = 7;
pub const IORING_OP_SYNC_FILE_RANGE: u8 = 8;
pub const IORING_OP_SENDMSG: u8 = 9;
pub const IORING_OP_RECVMSG: u8 = 10;
pub const IORING_OP_TIMEOUT: u8 = 11;
pub const IORING_OP_TIMEOUT_REMOVE: u8 = 12;
pub const IORING_OP_ACCEPT: u8 = 13;
pub const IORING_OP_ASYNC_CANCEL: u8 = 14;
pub const IORING_OP_LINK_TIMEOUT: u8 = 15;
pub const IORING_OP_CONNECT: u8 = 16;
pub const IORING_OP_FALLOCATE: u8 = 17;
pub const IORING_OP_OPENAT: u8 = 18;
pub const IORING_OP_CLOSE: u8 = 19;
pub const IORING_OP_FILES_UPDATE: u8 = 20;
pub const IORING_OP_STATX: u8 = 21;
pub const IORING_OP_READ: u8 = 22;
pub const IORING_OP_WRITE: u8 = 23;
pub const IORING_OP_FADVISE: u8 = 24;
pub const IORING_OP_MADVISE: u8 = 25;
pub const IORING_OP_SEND: u8 = 26;
pub const IORING_OP_RECV: u8 = 27;
pub const IORING_OP_OPENAT2: u8 = 28;
pub const IORING_OP_EPOLL_CTL: u8 = 29;
pub const IORING_OP_SPLICE: u8 = 30;
pub const IORING_OP_PROVIDE_BUFFERS: u8 = 31;
pub const IORING_OP_REMOVE_BUFFERS: u8 = 32;
pub const IORING_OP_TEE: u8 = 33;
pub const IORING_OP_SHUTDOWN: u8 = 34;
pub const IORING_OP_RENAMEAT: u8 = 35;
pub const IORING_OP_UNLINKAT: u8 = 36;
pub const IORING_OP_MKDIRAT: u8 = 37;
pub const IORING_OP_SYMLINKAT: u8 = 38;
pub const IORING_OP_LINKAT: u8 = 39;
pub const IORING_OP_MSG_RING: u8 = 40;
pub const IORING_OP_FSETXATTR: u8 = 41;
pub const IORING_OP_SETXATTR: u8 = 42;
pub const IORING_OP_FGETXATTR: u8 = 43;
pub const IORING_OP_GETXATTR: u8 = 44;
pub const IORING_OP_SOCKET: u8 = 45;
pub const IORING_OP_URING_CMD: u8 = 46;
pub const IORING_OP_SEND_ZC: u8 = 47;
pub const IORING_OP_SENDMSG_ZC: u8 = 48;
pub const IORING_OP_READ_MULTISHOT: u8 = 49;
pub const IORING_OP_WAITID: u8 = 50;
pub const IORING_OP_FUTEX_WAIT: u8 = 51;
pub const IORING_OP_FUTEX_WAKE: u8 = 52;
pub const IORING_OP_FUTEX_WAITV: u8 = 53;
pub const IORING_OP_FIXED_FD_INSTALL: u8 = 54;
pub const IORING_OP_LAST: u8 = 55;
pub const IORING_MSG_DATA: u32 = 0;
pub const IORING_MSG_SEND_FD: u32 = 1;
pub const IORING_CQE_BUFFER_SHIFT: u32 = 16;
pub const IORING_REGISTER_BUFFERS: u32 = 0;
pub const IORING_UNREGISTER_BUFFERS: u32 = 1;
pub const IORING_REGISTER_FILES: u32 = 2;
pub const IORING_UNREGISTER_FILES: u32 = 3;
pub const IORING_REGISTER_EVENTFD: u32 = 4;
pub const IORING_UNREGISTER_EVENTFD: u32 = 5;
pub const IORING_REGISTER_FILES_UPDATE: u32 = 6;
pub const IORING_REGISTER_EVENTFD_ASYNC: u32 = 7;
pub const IORING_REGISTER_PROBE: u32 = 8;
pub const IORING_REGISTER_PERSONALITY: u32 = 9;
pub const IORING_UNREGISTER_PERSONALITY: u32 = 10;
pub const IORING_REGISTER_RESTRICTIONS: u32 = 11;
pub const IORING_REGISTER_ENABLE_RINGS: u32 = 12;
pub const IORING_REGISTER_FILES2: u32 = 13;
pub const IORING_REGISTER_FILES_UPDATE2: u32 = 14;
pub const IORING_REGISTER_BUFFERS2: u32 = 15;
pub const IORING_REGISTER_BUFFERS_UPDATE: u32 = 16;
pub const IORING_REGISTER_IOWQ_AFF: u32 = 17;
pub const IORING_UNREGISTER_IOWQ_AFF: u32 = 18;
pub const IORING_REGISTER_IOWQ_MAX_WORKERS: u32 = 19;
pub const IORING_REGISTER_RING_FDS: u32 = 20;
pub const IORING_UNREGISTER_RING_FDS: u32 = 21;
pub const IORING_REGISTER_PBUF_RING: u32 = 22;
pub const IORING_UNREGISTER_PBUF_RING: u32 = 23;
pub const IORING_REGISTER_SYNC_CANCEL: u32 = 24;
pub const IORING_REGISTER_FILE_ALLOC_RANGE: u32 = 25;
pub const IORING_REGISTER_LAST: u32 = 26;
pub const IORING_REGISTER_USE_REGISTERED_RING: u32 = 2147483648;
pub const IO_WQ_BOUND: u32 = 0;
pub const IO_WQ_UNBOUND: u32 = 1;
pub const IOU_PBUF_RING_MMAP: u32 = 1;
pub const IORING_RESTRICTION_REGISTER_OP: u32 = 0;
pub const IORING_RESTRICTION_SQE_OP: u32 = 1;
pub const IORING_RESTRICTION_SQE_FLAGS_ALLOWED: u32 = 2;
pub const IORING_RESTRICTION_SQE_FLAGS_REQUIRED: u32 = 3;
pub const IORING_RESTRICTION_LAST: u32 = 4;
pub const SOCKET_URING_OP_SIOCINQ: u32 = 0;
pub const SOCKET_URING_OP_SIOCOUTQ: u32 = 1;
pub const SOCKET_URING_OP_GETSOCKOPT: u32 = 2;
pub const SOCKET_URING_OP_SETSOCKOPT: u32 = 3;

#[repr(C)]
#[derive(Default, Debug, Copy, Clone)]
pub struct KernelTimespec {
    pub tv_sec: ::std::os::raw::c_longlong,
    pub tv_nsec: ::std::os::raw::c_longlong,
}

#[repr(C)]
#[derive(Default, Debug, Copy, Clone)]
pub struct IoUringCqe {
    pub user_data: ::std::os::raw::c_ulonglong,
    pub res: ::std::os::raw::c_int,
    pub flags: ::std::os::raw::c_uint,
    pub big_cqe: [::std::os::raw::c_ulonglong; 0],
}

#[repr(C)]
#[derive(Default, Debug, Copy, Clone)]
pub struct IoSqringOffsets {
    pub head: ::std::os::raw::c_uint,
    pub tail: ::std::os::raw::c_uint,
    pub ring_mask: ::std::os::raw::c_uint,
    pub ring_entries: ::std::os::raw::c_uint,
    pub flags: ::std::os::raw::c_uint,
    pub dropped: ::std::os::raw::c_uint,
    pub array: ::std::os::raw::c_uint,
    pub resv1: ::std::os::raw::c_uint,
    pub user_addr: ::std::os::raw::c_ulonglong,
}

#[repr(C)]
#[derive(Default, Debug, Copy, Clone)]
pub struct IoCqringOffsets {
    pub head: ::std::os::raw::c_uint,
    pub tail: ::std::os::raw::c_uint,
    pub ring_mask: ::std::os::raw::c_uint,
    pub ring_entries: ::std::os::raw::c_uint,
    pub overflow: ::std::os::raw::c_uint,
    pub cqes: ::std::os::raw::c_uint,
    pub flags: ::std::os::raw::c_uint,
    pub resv1: ::std::os::raw::c_uint,
    pub user_addr: ::std::os::raw::c_ulonglong,
}

#[repr(C)]
#[derive(Default, Debug, Copy, Clone)]
pub struct IoUringParams {
    pub sq_entries: ::std::os::raw::c_uint,
    pub cq_entries: ::std::os::raw::c_uint,
    pub flags: SetupFlags,
    pub sq_thread_cpu: ::std::os::raw::c_uint,
    pub sq_thread_idle: ::std::os::raw::c_uint,
    pub features: FeatureFlags,
    pub wq_fd: ::std::os::raw::c_uint,
    pub resv: [::std::os::raw::c_uint; 3usize],
    pub sq_off: IoSqringOffsets,
    pub cq_off: IoCqringOffsets,
}

#[repr(C)]
#[derive(Default, Debug, Copy, Clone)]
pub struct IoUringFilesUpdate {
    pub offset: ::std::os::raw::c_uint,
    pub resv: ::std::os::raw::c_uint,
    pub fds: ::std::os::raw::c_ulonglong,
}

#[repr(C)]
#[derive(Default, Debug, Copy, Clone)]
pub struct IoUringRsrcRegister {
    pub nr: ::std::os::raw::c_uint,
    pub flags: ::std::os::raw::c_uint,
    pub resv2: ::std::os::raw::c_ulonglong,
    pub data: ::std::os::raw::c_ulonglong,
    pub tags: ::std::os::raw::c_ulonglong,
}

#[repr(C)]
#[derive(Default, Debug, Copy, Clone)]
pub struct IoUringRsrcUpdate {
    pub offset: ::std::os::raw::c_uint,
    pub resv: ::std::os::raw::c_uint,
    pub data: ::std::os::raw::c_ulonglong,
}

#[repr(C)]
#[derive(Default, Debug, Copy, Clone)]
pub struct IoUringRsrcUpdate2 {
    pub offset: ::std::os::raw::c_uint,
    pub resv: ::std::os::raw::c_uint,
    pub data: ::std::os::raw::c_ulonglong,
    pub tags: ::std::os::raw::c_ulonglong,
    pub nr: ::std::os::raw::c_uint,
    pub resv2: ::std::os::raw::c_uint,
}

#[repr(C)]
#[derive(Default, Debug, Copy, Clone)]
pub struct IoUringProbeOp {
    pub op: ::std::os::raw::c_uchar,
    pub resv: ::std::os::raw::c_uchar,
    pub flags: ProbeOpFlags,
    pub resv2: ::std::os::raw::c_uint,
}

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct IoUringProbe {
    pub last_op: ::std::os::raw::c_uchar,
    pub ops_len: ::std::os::raw::c_uchar,
    pub resv: ::std::os::raw::c_ushort,
    pub resv2: [::std::os::raw::c_uint; 3usize],
    pub ops: [IoUringProbeOp; 256],
}

impl Default for IoUringProbe {
    fn default() -> Self {
        unsafe { std::mem::zeroed() }
    }
}

#[repr(C)]
#[derive(Default, Debug, Copy, Clone)]
pub struct IoUringRestriction {
    pub opcode: ::std::os::raw::c_ushort,
    pub sqe_op: ::std::os::raw::c_uchar,
    pub resv: ::std::os::raw::c_uchar,
    pub resv2: [::std::os::raw::c_uint; 3usize],
}

#[repr(C)]
#[derive(Default, Debug, Copy, Clone)]
pub struct IoUringBuf {
    pub addr: ::std::os::raw::c_ulonglong,
    pub len: ::std::os::raw::c_uint,
    pub bid: ::std::os::raw::c_ushort,
    pub tail: ::std::os::raw::c_ushort,
}

#[repr(C)]
#[derive(Default, Debug, Copy, Clone)]
pub struct IoUringBufRing {
    pub bufs: [IoUringBuf; 1usize],
}

#[repr(C)]
#[derive(Default, Debug, Copy, Clone)]
pub struct IoUringBufReg {
    pub ring_addr: ::std::os::raw::c_ulonglong,
    pub ring_entries: ::std::os::raw::c_uint,
    pub bgid: ::std::os::raw::c_ushort,
    pub flags: ::std::os::raw::c_ushort,
    pub resv: [::std::os::raw::c_ulonglong; 3usize],
}

#[repr(C)]
#[derive(Default, Debug, Copy, Clone)]
pub struct IoUringGeteventsArg {
    pub sigmask: ::std::os::raw::c_ulonglong,
    pub sigmask_sz: ::std::os::raw::c_uint,
    pub pad: ::std::os::raw::c_uint,
    pub ts: ::std::os::raw::c_ulonglong,
}

#[repr(C)]
#[derive(Default, Debug, Copy, Clone)]
pub struct IoUringSyncCancelReg {
    pub addr: ::std::os::raw::c_ulonglong,
    pub fd: ::std::os::raw::c_int,
    pub flags: ::std::os::raw::c_uint,
    pub timeout: KernelTimespec,
    pub pad: [::std::os::raw::c_ulonglong; 4usize],
}

#[repr(C)]
#[derive(Default, Debug, Copy, Clone)]
pub struct IoUringFileIndexRange {
    pub off: ::std::os::raw::c_uint,
    pub len: ::std::os::raw::c_uint,
    pub resv: ::std::os::raw::c_ulonglong,
}

#[repr(C)]
#[derive(Default, Debug, Copy, Clone)]
pub struct IoUringRecvmsgOut {
    pub namelen: ::std::os::raw::c_uint,
    pub controllen: ::std::os::raw::c_uint,
    pub payloadlen: ::std::os::raw::c_uint,
    pub flags: ::std::os::raw::c_uint,
}
